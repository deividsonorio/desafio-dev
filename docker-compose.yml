
version: '3.3'

services:
  app:
    build:
      context: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py loaddata cnab/fixtures/transactions.json &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    environment:
      - SECRET_KEY=devsecretkey
      - DEBUG=1
      - SECRET_KEY=f4ce9819-646e-45e0-aee8-8bea39116ef8
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - DJANGO_SU_NAME=desafio
      - DJANGO_SU_EMAIL=dev@test.com
      - DJANGO_SU_PASSWORD=dev@pass
    depends_on:
      - db
    links:
      - redis
      - db
    networks:
      - my-network

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - my-network

  celery:
    restart: always
    build:
      context: .
    command: celery -A app worker -l info
    volumes:
      - ./app:/app
    environment:
      - DEBUG=1
      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      - db
      - redis
      - app
    networks:
      - my-network
    links:
      - redis

  redis:
    image: redis:6-alpine
    hostname: redis
    networks:
      - my-network
    ports:
      - "6379:6379"

volumes:
  db:

networks:
  my-network: